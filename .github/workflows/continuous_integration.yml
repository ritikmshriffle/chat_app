name: Continuous Integration

on:
  push:
    branches_ignore:
      - main

env:
  MINIMUM_COVERAGE: 90

jobs:
  ci_validation:
    runs-on: ubuntu-latest
  
    services:
      postgres:
        image: postgres:alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
        
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.0
          bundler-cache: true
          cache: true
      
      - name: Test
        run: bundle exec rspec

      - name: Lint
        run: bundle exec rubocop

      - name: Check Coverage
        run: |
          covered_percent=$(cat coverage/coverage.json | jq -r '.metrics.covered_percent');
          
          re='^[+-]?[0-9]+([.||,][0-9]+)?$';
          if ! [[ $covered_percent =~ $re ]]; then 
            echo "Couldn't get coverage from artifact.";
            exit 0 # Returning 0 doesn't invalidate this step.
          fi
          
          required_coverage=${{env.MINIMUM_COVERAGE}};
          
          if (( $(echo "$covered_percent <= $required_coverage" | bc -l) )); then
            echo "Coverage ($covered_percent%) is below the required threshold of $required_coverage%.";
            exit 1 # Returning 1 will invalidate this step and the job will be marked as failed.
          else
            echo "Coverage ($covered_percent%) passed the required threshold of $required_coverage%."
          fi